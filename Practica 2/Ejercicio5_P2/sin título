program 
const
	ValorAlto=9999;
type 
	direccion= record 
			   calle:integer;
			   num: integer;
			   depto: integer;
			   ciudad: string;
			   end;
	DatoF= record
		   numP: integer;
		   DNI: LongInt;
		   NYA: string;
		   num_Mat_med_d:integer; // nnumero de matricula del medico que firmó el deceso.
		   Fecha_y_Hora: LongInt;
		   lugarF: string; // lugar en el que fallecio la persona.
		   end;
	DatoN=  record
			numP: integer;
		    DNI: LongInt;
		    Nom: string;
		    ape: string; 
		    dir: direccion;
		    num_Mat_med:integer; // nnumero de matricula del medico.
		    DNI_Madre: LongInt;
		    DNI_Padre:LongInt;
		    NYA_Madre: string;
		    NYA_Padre: string;
		    end;
	DatoM= record
		   numP: integer;
		   DNI: LongInt;
		   Nom: string;
		   ape: string; 
		   num_Mat_med:integer; // nnumero de matricula del medico.
		   DNI_Madre: LongInt;
		   DNI_Padre:LongInt;
		   NYA_Madre: string;
		   NYA_Padre: string;
	   	   fallecido: boolean;
		   FyH_Deceso: LongInt;
		   num_Mat_med_d:integer; // nnumero de matricula del medico que firmó el deceso.
		   lugarF: string;
		   END;
		   
	ArchM= file of datoM;
	ArchN= file of DatoN;
	ArchF= file of DatoF;
	VRN= array [1..50] of DatoN;// vector de registros de nacimientos
	VRF= array [1..50] of DatoF;// vector de registros de fallecidos
	VN= array [1..50] of archN; // vector de archivos de nacimientos
	VF= array [1..50] of archF; 
	
procedure LeerNacimiento(var D: datoN);

procedure LeerFallecido(var  F: datoF);

procedure LeerDeMaestro( var mae:archM; dato: DatoM);
begin
	if(not eof(mae)) then
		read(mae,dato)
	else
		dato.numP:= ValorAlto;
end;

procedure LeerDeArchF(var f: ArchF;var dato: DatoF);
begin
if(not eof(f)) then
		read(f,dato)
	else
		dato.numP:= ValorAlto;
end;

procedure LeerDeArchN(var n: ArchN; var dato: DatoN);
begin
if(not eof(n)) then
		read(n,dato)
	else
		dato.numP:= ValorAlto;
end;
